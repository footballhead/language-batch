'scopeName': 'source.bat'
'fileTypes': [
  'bat',
  'cmd',
  'btm'
]
'name': 'Batch'
'patterns': [
  # label declaration
  {
      'match': '^:.*'
      'name': 'entity.name.section.batch'
  }
  # goto label
  {
    'captures':
      '1':
        'name': 'keyword.control.batch'
      '2':
        'name': 'entity.name.section.batch'
    'match': '\\b(GOTO|goto)\\b(.*)'
  }
  # user-defined/environment variable substitution
  {
    'match': '%.+%'
    'name': 'variable.other.batch'
  }
  # set variable
  {
    'captures':
      '1':
        'name': 'support.function.batch'
      '2':
        'name': 'variable.language.batch'
    'match': '\\b(SET|set)\\b(.*)='
  }
  # single line comments
  {
    'match': 'REM.*$|::.*$'
    'name': 'comment.line.batch'
  }
  # built-in non-control functionality
  {
    'match': '\\b(ASSOC|assoc|CALL|call|CD|cd|CLS|cls|COLOR|color|DATE|date|DEL|del|DIR|dir|ECHO|echo|ENDLOCAL|endlocal|ERASE|erase|FTYPE|ftype|MD|md|MKLINK|mklink|MOVE|move|PATH|path|POPD|popd|PROMPT|prompt|PUSHD|pushd|REN|ren|RD|rd|SETLOCAL|setlocal|SHIFT|shift|START|start|TIME|time|TITLE|title|VER|ver|VERIFY|verify|VOL|vol)\\b'
    'name': 'support.function.batch'
  }
  # control keywords
  {
    'match': '\\b(if|IF|for|FOR|else|ELSE|do|DO|return|RETURN|exit|EXIT|PAUSE|pause)\\b'
    'name': 'keyword.control.batch'
  }
  # ERRORLEVEL
  {
    'match': 'ERRORLEVEL|errorlevel'
    'name': 'variable.language.batch'
  }
  # single quoted string
  {
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.batch'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.batch'
    'name': 'string.quoted.single.batch'
  }
  # double-quoted string
  {
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.batch'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.batch'
    'name': 'string.quoted.double.batch'
  }
  # operators (pipes, redirects, etc)
  {
    'match': '@|\\||>|>>|NOT|not'
    'name': 'keyword.operator.batch'
  }
  # escaped characters
  {
    'match': '\\^.|%%'
    'name': 'constant.character.escape.batch'
  }
  # constant numbers
  {
    'captures':
      '1':
        'name': 'constant.numeric.batch'
    'match': '([0-9]+)'
    'name': 'meta.numberic.batch'
  }
  # script arguments
  {
    'match': '%[0-9]+'
    'name': 'variable.parameter.batch'
  }
]
